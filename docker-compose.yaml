version: '3'

networks:
    back-tier:
       null
volumes:
  db-data:

    null
services:
  db:
    image: postgres:14.1
    restart: always
    networks:
     - back-tier
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./user_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_DATABASE=dynafood"

  adminer:
    # networks:
    #     - back-tier
    image: adminer
    restart: always
    ports:
      - 8082:8080  

  server:
    depends_on:
      - db
    build: .
    restart: always
    ports:
      - "8081:8081"
    networks:
      - back-tier
    environment:
      - "DB_USER=postgres"
      - "DB_PASSWORD=password"
      - "DB_STRING=@db:5432/postgres"
      - "JWT_SECRET=dynafood_secret"
      - "DB_PORT=5432"
      - "DB_HOST=localhost"
      - "DB_DATABASE=dynafood"
      - "PORT=8081"
      - "NODE_ENV=production"
      - "DATABASE_URL=postgres://wnqkgrypszzfdw:39d4d34974c16f7c97858f2fae1ea2a288c651c960b443cba245bf6035d74a21@ec2-34-246-227-219.eu-west-1.compute.amazonaws.com:5432/dap56c0cqcc052"
    command: npm start  
